name: IssueHandle1

on:
  workflow_dispatch:
  issues:
    types: [opened, closed, labeled, unlabeled]
  issue_comment:
    types: [created]

jobs:
  labeler:
    runs-on: ubuntu-latest
    steps:

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Handle Issues
      uses: jvalkeal/issue-handler@remove-label-work1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        config: >
          {
            "data": {
              "team": ["jvalkeal"]
            },
            "recipes": [
              {
                "name": "Mark new issue to get triaged",
                "type": "ifThen",
                "if": "isEvent('issues') && isAction('opened') && !isMilestone() && !hasLabels() && !dataInArray('team', actor)",
                "then": "labelIssue('status/need-triage')"
              },
              {
                "name": "Wait issue owner comment",
                "type": "ifThen",
                "if": "isEvent('issue_comment') && isAction('created') && !dataInArray('team', actor) && context.comment.user.login == context.issue.user.login",
                "then": "[labelIssue('for/team-attention'), removeLabel('status/need-feedback')]"
              },
              {
                "name": "Manage backport issues",
                "type": "manageBackportIssues",
                "whenLabeled": "labeledStartsWith(['branch/'])",
                "whenUnlabeled": "labeledStartsWith(['branch/'])",
                "whenLabels": "labelsContainsAny(['for/backport'])",
                "fromLabels": "labeledStartsWith(['branch/'])",
                "additionalLabels": "'type/backport'",
                "body": "'Backport #' + number"
              }
            ]
          }
